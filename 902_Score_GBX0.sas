
data temp;
   set casuser.ads_gbx0;

*------------------------------------------------------------*;
* DMCAS Release:         8.5;
* SAS Release:           V.03.05M0P111119;
* Site Number:           70269557;
* Host:                  sas-0001-microsrvcs;
* Encoding:              utf-8;
* Java Encoding:         UTF8;
* Locale:                en_US;
* Project GUID:          5d9cc4c8-250e-4fa6-a512-b462180a59b1;
* Node GUID:             e486e0f2-87b3-4508-ba15-5b00d2d5e636;
* Generated by:          sint.sedgemon.c;
* Date:                  01JUL2021:12:33:58
*------------------------------------------------------------*;
*------------------------------------------------------------*;
*Nodeid: _88IMC907YTMNJ6W0B706Q97Y9;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
*Nodeid: _1WCSK0Q6ELH092A9G7Y0DH50D;
*------------------------------------------------------------*;

* Transformation Method = STANDARDIZE ;
Label 'STD_pGB1'n = 'Transformed Predicted Probability: targetGB1=1';
Length 'STD_pGB1'n 8;
if missing('pGB1'n) then 'STD_pGB1'n = .;
else 'STD_pGB1'n = ('pGB1'n-0.0687680988)/0.1205083728;

* Transformation Method = STANDARDIZE ;
Label 'STD_pGB2'n = 'Transformed Predicted Probability: targetGB2=1';
Length 'STD_pGB2'n 8;
if missing('pGB2'n) then 'STD_pGB2'n = .;
else 'STD_pGB2'n = ('pGB2'n-0.0691081579)/0.0924338424;

* Transformation Method = STANDARDIZE ;
Label 'STD_pIssue'n = 'Transformed Predicted: targetX=1';
Length 'STD_pIssue'n 8;
if missing('pIssue'n) then 'STD_pIssue'n = .;
else 'STD_pIssue'n = ('pIssue'n-0.0718954248)/0.1197107997;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumCheck4320'n = 'Transformed SumCheck4320';
Length 'STD_SumCheck4320'n 8;
if missing('SumCheck4320'n) then 'STD_SumCheck4320'n = .;
else 'STD_SumCheck4320'n = ('SumCheck4320'n-0.0065359477)/0.0808452083;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumInspect4320'n = 'Transformed SumInspect4320';
Length 'STD_SumInspect4320'n 8;
if missing('SumInspect4320'n) then 'STD_SumInspect4320'n = .;
else 'STD_SumInspect4320'n = ('SumInspect4320'n-0.0065359477)/0.0808452083;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumOilLevel4320'n = 'Transformed SumOilLevel4320';
Length 'STD_SumOilLevel4320'n 8;
if missing('SumOilLevel4320'n) then 'STD_SumOilLevel4320'n = .;
else 'STD_SumOilLevel4320'n = ('SumOilLevel4320'n-0.2614379085)/1.1797147393;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumOilPress4320'n = 'Transformed SumOilPress4320';
Length 'STD_SumOilPress4320'n 8;
if missing('SumOilPress4320'n) then 'STD_SumOilPress4320'n = .;
else 'STD_SumOilPress4320'n = ('SumOilPress4320'n-0.1111111111)/0.5447785107;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumOilTemp4320'n = 'Transformed SumOilTemp4320';
Length 'STD_SumOilTemp4320'n 8;
if missing('SumOilTemp4320'n) then 'STD_SumOilTemp4320'n = .;
else 'STD_SumOilTemp4320'n = ('SumOilTemp4320'n-0.2091503268)/1.3409226732;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumRepair4320'n = 'Transformed SumRepair4320';
Length 'STD_SumRepair4320'n 8;
if missing('SumRepair4320'n) then 'STD_SumRepair4320'n = .;
else 'STD_SumRepair4320'n = ('SumRepair4320'n-0.1176470588)/0.3794243644;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumTemp4320'n = 'Transformed SumTemp4320';
Length 'STD_SumTemp4320'n 8;
if missing('SumTemp4320'n) then 'STD_SumTemp4320'n = .;
else 'STD_SumTemp4320'n = ('SumTemp4320'n-0.7647058824)/1.2605591172;

* Transformation Method = STANDARDIZE ;
Label 'STD_SumTot4320'n = 'Transformed Gearbox Issue Flag';
Length 'STD_SumTot4320'n 8;
if missing('SumTot4320'n) then 'STD_SumTot4320'n = .;
else 'STD_SumTot4320'n = ('SumTot4320'n-0.6013071895)/1.899930294;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_air_temp_Max'n = 'Transformed Turbine Air Temperature';
Length 'STD_tdp_air_temp_Max'n 8;
if missing('tdp_air_temp_Max'n) then 'STD_tdp_air_temp_Max'n = .;
else 'STD_tdp_air_temp_Max'n = ('tdp_air_temp_Max'n-31.087566788)/10.333363975;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_air_temp_Mean'n = 'Transformed Turbine Air Temperature';
Length 'STD_tdp_air_temp_Mean'n 8;
if missing('tdp_air_temp_Mean'n) then 'STD_tdp_air_temp_Mean'n = .;
else 'STD_tdp_air_temp_Mean'n = ('tdp_air_temp_Mean'n-19.04279107)/10.251720214;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_air_temp_StdDev'n = 'Transformed Turbine Air Temperature';
Length 'STD_tdp_air_temp_StdDev'n 8;
if missing('tdp_air_temp_StdDev'n) then 'STD_tdp_air_temp_StdDev'n = .;
else 'STD_tdp_air_temp_StdDev'n = ('tdp_air_temp_StdDev'n-4.9995085426)/1.7767704954;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_1_set_Max'n = 'Transformed Blade Angle 1 Set';
Length 'STD_tdp_blade_angle_1_set_Max'n 8;
if missing('tdp_blade_angle_1_set_Max'n) then 'STD_tdp_blade_angle_1_set_Max'n = .;
else 'STD_tdp_blade_angle_1_set_Max'n = ('tdp_blade_angle_1_set_Max'n-82.894642597)/13.528964826;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_1_set_Mean'n = 'Transformed Blade Angle 1 Set';
Length 'STD_tdp_blade_angle_1_set_Mean'n 8;
if missing('tdp_blade_angle_1_set_Mean'n) then 'STD_tdp_blade_angle_1_set_Mean'n = .;
else 'STD_tdp_blade_angle_1_set_Mean'n = ('tdp_blade_angle_1_set_Mean'n-16.340880927)/21.574377727;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_1_set_StdDev'n = 'Transformed Blade Angle 1 Set';
Length 'STD_tdp_blade_angle_1_set_StdDev'n 8;
if missing('tdp_blade_angle_1_set_StdDev'n) then 'STD_tdp_blade_angle_1_set_StdDev'n = .;
else 'STD_tdp_blade_angle_1_set_StdDev'n = ('tdp_blade_angle_1_set_StdDev'n-21.64214566)/10.130831999;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_2_set_Max'n = 'Transformed Blade Angle 2 Set';
Length 'STD_tdp_blade_angle_2_set_Max'n 8;
if missing('tdp_blade_angle_2_set_Max'n) then 'STD_tdp_blade_angle_2_set_Max'n = .;
else 'STD_tdp_blade_angle_2_set_Max'n = ('tdp_blade_angle_2_set_Max'n-83.058268112)/13.577378557;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_2_set_Mean'n = 'Transformed Blade Angle 2 Set';
Length 'STD_tdp_blade_angle_2_set_Mean'n 8;
if missing('tdp_blade_angle_2_set_Mean'n) then 'STD_tdp_blade_angle_2_set_Mean'n = .;
else 'STD_tdp_blade_angle_2_set_Mean'n = ('tdp_blade_angle_2_set_Mean'n-16.342274878)/21.573269491;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_2_set_StdDev'n = 'Transformed Blade Angle 2 Set';
Length 'STD_tdp_blade_angle_2_set_StdDev'n 8;
if missing('tdp_blade_angle_2_set_StdDev'n) then 'STD_tdp_blade_angle_2_set_StdDev'n = .;
else 'STD_tdp_blade_angle_2_set_StdDev'n = ('tdp_blade_angle_2_set_StdDev'n-21.649216998)/10.125426106;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_3_set_Max'n = 'Transformed Blade Angle 3 Set';
Length 'STD_tdp_blade_angle_3_set_Max'n 8;
if missing('tdp_blade_angle_3_set_Max'n) then 'STD_tdp_blade_angle_3_set_Max'n = .;
else 'STD_tdp_blade_angle_3_set_Max'n = ('tdp_blade_angle_3_set_Max'n-83.050498192)/13.578083708;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_3_set_Mean'n = 'Transformed Blade Angle 3 Set';
Length 'STD_tdp_blade_angle_3_set_Mean'n 8;
if missing('tdp_blade_angle_3_set_Mean'n) then 'STD_tdp_blade_angle_3_set_Mean'n = .;
else 'STD_tdp_blade_angle_3_set_Mean'n = ('tdp_blade_angle_3_set_Mean'n-15.94201718)/21.118370993;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_3_set_StdDev'n = 'Transformed Blade Angle 3 Set';
Length 'STD_tdp_blade_angle_3_set_StdDev'n 8;
if missing('tdp_blade_angle_3_set_StdDev'n) then 'STD_tdp_blade_angle_3_set_StdDev'n = .;
else 'STD_tdp_blade_angle_3_set_StdDev'n = ('tdp_blade_angle_3_set_StdDev'n-21.488379237)/10.104375577;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_Max'n = 'Transformed tdp_blade_angle_Max';
Length 'STD_tdp_blade_angle_Max'n 8;
if missing('tdp_blade_angle_Max'n) then 'STD_tdp_blade_angle_Max'n = .;
else 'STD_tdp_blade_angle_Max'n = ('tdp_blade_angle_Max'n-82.507330293)/13.84867937;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_Mean'n = 'Transformed tdp_blade_angle_Mean';
Length 'STD_tdp_blade_angle_Mean'n 8;
if missing('tdp_blade_angle_Mean'n) then 'STD_tdp_blade_angle_Mean'n = .;
else 'STD_tdp_blade_angle_Mean'n = ('tdp_blade_angle_Mean'n-15.854002409)/20.917974374;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_StdDev'n = 'Transformed tdp_blade_angle_StdDev';
Length 'STD_tdp_blade_angle_StdDev'n 8;
if missing('tdp_blade_angle_StdDev'n) then 'STD_tdp_blade_angle_StdDev'n = .;
else 'STD_tdp_blade_angle_StdDev'n = ('tdp_blade_angle_StdDev'n-21.308541788)/9.8077495481;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_Var_Max'n = 'Transformed tdp_blade_angle_Var_Max';
Length 'STD_tdp_blade_angle_Var_Max'n 8;
if missing('tdp_blade_angle_Var_Max'n) then 'STD_tdp_blade_angle_Var_Max'n = .;
else 'STD_tdp_blade_angle_Var_Max'n = ('tdp_blade_angle_Var_Max'n-271.48291289)/572.60527021;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_Var_Mean'n = 'Transformed tdp_blade_angle_Var_Mean';
Length 'STD_tdp_blade_angle_Var_Mean'n 8;
if missing('tdp_blade_angle_Var_Mean'n) then 'STD_tdp_blade_angle_Var_Mean'n = .;
else 'STD_tdp_blade_angle_Var_Mean'n = ('tdp_blade_angle_Var_Mean'n-27.562258743)/170.62548739;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_blade_angle_Var_StdDev'n = 'Transformed tdp_blade_angle_Var_StdDev';
Length 'STD_tdp_blade_angle_Var_StdDev'n 8;
if missing('tdp_blade_angle_Var_StdDev'n) then 'STD_tdp_blade_angle_Var_StdDev'n = .;
else 'STD_tdp_blade_angle_Var_StdDev'n = ('tdp_blade_angle_Var_StdDev'n-43.109170958)/155.64727087;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_gen_speed_Max'n = 'Transformed Generator Speed';
Length 'STD_tdp_gen_speed_Max'n 8;
if missing('tdp_gen_speed_Max'n) then 'STD_tdp_gen_speed_Max'n = .;
else 'STD_tdp_gen_speed_Max'n = ('tdp_gen_speed_Max'n-1383.7483046)/321.07159747;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_gen_speed_Mean'n = 'Transformed Generator Speed';
Length 'STD_tdp_gen_speed_Mean'n 8;
if missing('tdp_gen_speed_Mean'n) then 'STD_tdp_gen_speed_Mean'n = .;
else 'STD_tdp_gen_speed_Mean'n = ('tdp_gen_speed_Mean'n-920.81937481)/320.93353136;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_gen_speed_StdDev'n = 'Transformed Generator Speed';
Length 'STD_tdp_gen_speed_StdDev'n 8;
if missing('tdp_gen_speed_StdDev'n) then 'STD_tdp_gen_speed_StdDev'n = .;
else 'STD_tdp_gen_speed_StdDev'n = ('tdp_gen_speed_StdDev'n-374.20548884)/133.50691518;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_hydraulic_pressure_Max'n = 'Transformed Hydraulic Pressure';
Length 'STD_tdp_hydraulic_pressure_Max'n 8;
if missing('tdp_hydraulic_pressure_Max'n) then 'STD_tdp_hydraulic_pressure_Max'n = .;
else 'STD_tdp_hydraulic_pressure_Max'n = ('tdp_hydraulic_pressure_Max'n-78.93616633)/7.9080375532;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_hydraulic_pressure_Mean'n = 'Transformed Hydraulic Pressure';
Length 'STD_tdp_hydraulic_pressure_Mean'n 8;
if missing('tdp_hydraulic_pressure_Mean'n) then 'STD_tdp_hydraulic_pressure_Mean'n = .;
else 'STD_tdp_hydraulic_pressure_Mean'n = ('tdp_hydraulic_pressure_Mean'n-73.428878286)/6.7979869646;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_hydraulic_pressure_StdDe'n = 'Transformed Hydraulic Pressure';
Length 'STD_tdp_hydraulic_pressure_StdDe'n 8;
if missing('tdp_hydraulic_pressure_StdDev'n) then 'STD_tdp_hydraulic_pressure_StdDe'n = .;
else 'STD_tdp_hydraulic_pressure_StdDe'n = ('tdp_hydraulic_pressure_StdDev'n-2.6870512005)/1.6297901261;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_power_factor_Max'n = 'Transformed Power Factor';
Length 'STD_tdp_power_factor_Max'n 8;
if missing('tdp_power_factor_Max'n) then 'STD_tdp_power_factor_Max'n = .;
else 'STD_tdp_power_factor_Max'n = ('tdp_power_factor_Max'n-0.9674298078)/0.1777953797;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_power_factor_Mean'n = 'Transformed Power Factor';
Length 'STD_tdp_power_factor_Mean'n 8;
if missing('tdp_power_factor_Mean'n) then 'STD_tdp_power_factor_Mean'n = .;
else 'STD_tdp_power_factor_Mean'n = ('tdp_power_factor_Mean'n-0.4623125073)/0.3874398993;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_power_factor_StdDev'n = 'Transformed Power Factor';
Length 'STD_tdp_power_factor_StdDev'n 8;
if missing('tdp_power_factor_StdDev'n) then 'STD_tdp_power_factor_StdDev'n = .;
else 'STD_tdp_power_factor_StdDev'n = ('tdp_power_factor_StdDev'n-0.6001510863)/0.3282432936;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_ResidPower_Max'n = 'Transformed Resid Power Pred by Phase Voltage';
Length 'STD_tdp_ResidPower_Max'n 8;
if missing('tdp_ResidPower_Max'n) then 'STD_tdp_ResidPower_Max'n = .;
else 'STD_tdp_ResidPower_Max'n = ('tdp_ResidPower_Max'n-50.062922171)/44.339357782;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_ResidPower_Mean'n = 'Transformed Resid Power Pred by Phase Voltage';
Length 'STD_tdp_ResidPower_Mean'n 8;
if missing('tdp_ResidPower_Mean'n) then 'STD_tdp_ResidPower_Mean'n = .;
else 'STD_tdp_ResidPower_Mean'n = ('tdp_ResidPower_Mean'n--25.79552638)/31.239360937;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_ResidPower_StdDev'n = 'Transformed Resid Power Pred by Phase Voltage';
Length 'STD_tdp_ResidPower_StdDev'n 8;
if missing('tdp_ResidPower_StdDev'n) then 'STD_tdp_ResidPower_StdDev'n = .;
else 'STD_tdp_ResidPower_StdDev'n = ('tdp_ResidPower_StdDev'n-58.001355319)/28.04848324;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_state_fault_Max'n = 'Transformed State Fault';
Length 'STD_tdp_state_fault_Max'n 8;
if missing('tdp_state_fault_Max'n) then 'STD_tdp_state_fault_Max'n = .;
else 'STD_tdp_state_fault_Max'n = ('tdp_state_fault_Max'n-628.84186809)/584.96161103;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_state_fault_Mean'n = 'Transformed State Fault';
Length 'STD_tdp_state_fault_Mean'n 8;
if missing('tdp_state_fault_Mean'n) then 'STD_tdp_state_fault_Mean'n = .;
else 'STD_tdp_state_fault_Mean'n = ('tdp_state_fault_Mean'n-44.763558663)/118.44489155;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_state_fault_StdDev'n = 'Transformed State Fault';
Length 'STD_tdp_state_fault_StdDev'n 8;
if missing('tdp_state_fault_StdDev'n) then 'STD_tdp_state_fault_StdDev'n = .;
else 'STD_tdp_state_fault_StdDev'n = ('tdp_state_fault_StdDev'n-100.93853652)/136.72391438;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_bearing_Max'n = 'Transformed Gearbox Shaft Bearing Temperature';
Length 'STD_tdp_temp_gearbox_bearing_Max'n 8;
if missing('tdp_temp_gearbox_bearing_Max'n) then 'STD_tdp_temp_gearbox_bearing_Max'n = .;
else 'STD_tdp_temp_gearbox_bearing_Max'n = ('tdp_temp_gearbox_bearing_Max'n-64.93731565)/8.0583062945;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_bearing_Mea'n = 'Transformed Gearbox Shaft Bearing Temperature';
Length 'STD_tdp_temp_gearbox_bearing_Mea'n 8;
if missing('tdp_temp_gearbox_bearing_Mean'n) then 'STD_tdp_temp_gearbox_bearing_Mea'n = .;
else 'STD_tdp_temp_gearbox_bearing_Mea'n = ('tdp_temp_gearbox_bearing_Mean'n-55.597891544)/10.020314821;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_bearin_StdD'n = 'Transformed Gearbox Shaft Bearing Temperature';
Length 'STD_tdp_temp_gearbox_bearin_StdD'n 8;
if missing('tdp_temp_gearbox_bearin_StdDev'n) then 'STD_tdp_temp_gearbox_bearin_StdD'n = .;
else 'STD_tdp_temp_gearbox_bearin_StdD'n = ('tdp_temp_gearbox_bearin_StdDev'n-6.3724021825)/3.9605804165;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_oil_Max'n = 'Transformed Gearbox Oil Temperature';
Length 'STD_tdp_temp_gearbox_oil_Max'n 8;
if missing('tdp_temp_gearbox_oil_Max'n) then 'STD_tdp_temp_gearbox_oil_Max'n = .;
else 'STD_tdp_temp_gearbox_oil_Max'n = ('tdp_temp_gearbox_oil_Max'n-58.862625318)/6.7999168558;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_oil_Mean'n = 'Transformed Gearbox Oil Temperature';
Length 'STD_tdp_temp_gearbox_oil_Mean'n 8;
if missing('tdp_temp_gearbox_oil_Mean'n) then 'STD_tdp_temp_gearbox_oil_Mean'n = .;
else 'STD_tdp_temp_gearbox_oil_Mean'n = ('tdp_temp_gearbox_oil_Mean'n-51.395560501)/8.8439411429;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gearbox_oil_StdDev'n = 'Transformed Gearbox Oil Temperature';
Length 'STD_tdp_temp_gearbox_oil_StdDev'n 8;
if missing('tdp_temp_gearbox_oil_StdDev'n) then 'STD_tdp_temp_gearbox_oil_StdDev'n = .;
else 'STD_tdp_temp_gearbox_oil_StdDev'n = ('tdp_temp_gearbox_oil_StdDev'n-4.5980643251)/3.338528064;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_air_cooler_Max'n = 'Transformed Temperature Generator Air Cooler';
Length 'STD_tdp_temp_gen_air_cooler_Max'n 8;
if missing('tdp_temp_gen_air_cooler_Max'n) then 'STD_tdp_temp_gen_air_cooler_Max'n = .;
else 'STD_tdp_temp_gen_air_cooler_Max'n = ('tdp_temp_gen_air_cooler_Max'n-60.9456364)/13.749512691;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_air_cooler_Mean'n = 'Transformed Temperature Generator Air Cooler';
Length 'STD_tdp_temp_gen_air_cooler_Mean'n 8;
if missing('tdp_temp_gen_air_cooler_Mean'n) then 'STD_tdp_temp_gen_air_cooler_Mean'n = .;
else 'STD_tdp_temp_gen_air_cooler_Mean'n = ('tdp_temp_gen_air_cooler_Mean'n-39.908284812)/11.159366453;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_air_cooler_StdD'n = 'Transformed Temperature Generator Air Cooler';
Length 'STD_tdp_temp_gen_air_cooler_StdD'n 8;
if missing('tdp_temp_gen_air_cooler_StdDev'n) then 'STD_tdp_temp_gen_air_cooler_StdD'n = .;
else 'STD_tdp_temp_gen_air_cooler_StdD'n = ('tdp_temp_gen_air_cooler_StdDev'n-8.1804792014)/3.2169390135;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_de_Max'n = 'Transformed Temperature Generator Bearing DE';
Length 'STD_tdp_temp_gen_bearing_de_Max'n 8;
if missing('tdp_temp_gen_bearing_de_Max'n) then 'STD_tdp_temp_gen_bearing_de_Max'n = .;
else 'STD_tdp_temp_gen_bearing_de_Max'n = ('tdp_temp_gen_bearing_de_Max'n-42.86215198)/9.9594958624;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_de_Mean'n = 'Transformed Temperature Generator Bearing DE';
Length 'STD_tdp_temp_gen_bearing_de_Mean'n 8;
if missing('tdp_temp_gen_bearing_de_Mean'n) then 'STD_tdp_temp_gen_bearing_de_Mean'n = .;
else 'STD_tdp_temp_gen_bearing_de_Mean'n = ('tdp_temp_gen_bearing_de_Mean'n-31.283602142)/8.8531486005;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_de_StdD'n = 'Transformed Temperature Generator Bearing DE';
Length 'STD_tdp_temp_gen_bearing_de_StdD'n 8;
if missing('tdp_temp_gen_bearing_de_StdDev'n) then 'STD_tdp_temp_gen_bearing_de_StdD'n = .;
else 'STD_tdp_temp_gen_bearing_de_StdD'n = ('tdp_temp_gen_bearing_de_StdDev'n-4.7943871879)/2.1634096717;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_nde_Max'n = 'Transformed Temperature Generator Bearing NDE';
Length 'STD_tdp_temp_gen_bearing_nde_Max'n 8;
if missing('tdp_temp_gen_bearing_nde_Max'n) then 'STD_tdp_temp_gen_bearing_nde_Max'n = .;
else 'STD_tdp_temp_gen_bearing_nde_Max'n = ('tdp_temp_gen_bearing_nde_Max'n-47.75934557)/12.299562013;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_nde_Mea'n = 'Transformed Temperature Generator Bearing NDE';
Length 'STD_tdp_temp_gen_bearing_nde_Mea'n 8;
if missing('tdp_temp_gen_bearing_nde_Mean'n) then 'STD_tdp_temp_gen_bearing_nde_Mea'n = .;
else 'STD_tdp_temp_gen_bearing_nde_Mea'n = ('tdp_temp_gen_bearing_nde_Mean'n-34.142930177)/10.435549032;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_gen_bearing_nd_StdD'n = 'Transformed Temperature Generator Bearing NDE';
Length 'STD_tdp_temp_gen_bearing_nd_StdD'n 8;
if missing('tdp_temp_gen_bearing_nd_StdDev'n) then 'STD_tdp_temp_gen_bearing_nd_StdD'n = .;
else 'STD_tdp_temp_gen_bearing_nd_StdD'n = ('tdp_temp_gen_bearing_nd_StdDev'n-5.631891298)/2.7065171906;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_main_bearing_Max'n = 'Transformed Temperature Main Bearing';
Length 'STD_tdp_temp_main_bearing_Max'n 8;
if missing('tdp_temp_main_bearing_Max'n) then 'STD_tdp_temp_main_bearing_Max'n = .;
else 'STD_tdp_temp_main_bearing_Max'n = ('tdp_temp_main_bearing_Max'n-34.223036024)/6.8991550586;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_main_bearing_Mean'n = 'Transformed Temperature Main Bearing';
Length 'STD_tdp_temp_main_bearing_Mean'n 8;
if missing('tdp_temp_main_bearing_Mean'n) then 'STD_tdp_temp_main_bearing_Mean'n = .;
else 'STD_tdp_temp_main_bearing_Mean'n = ('tdp_temp_main_bearing_Mean'n-27.287827257)/8.1011341131;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_temp_main_bearing_StdDev'n = 'Transformed Temperature Main Bearing';
Length 'STD_tdp_temp_main_bearing_StdDev'n 8;
if missing('tdp_temp_main_bearing_StdDev'n) then 'STD_tdp_temp_main_bearing_StdDev'n = .;
else 'STD_tdp_temp_main_bearing_StdDev'n = ('tdp_temp_main_bearing_StdDev'n-3.6312341068)/2.0960996343;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_tower_acceleration_Max'n = 'Transformed Tower Acceleration';
Length 'STD_tdp_tower_acceleration_Max'n 8;
if missing('tdp_tower_acceleration_Max'n) then 'STD_tdp_tower_acceleration_Max'n = .;
else 'STD_tdp_tower_acceleration_Max'n = ('tdp_tower_acceleration_Max'n-579.83741426)/539.98509125;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_tower_acceleration_Mean'n = 'Transformed Tower Acceleration';
Length 'STD_tdp_tower_acceleration_Mean'n 8;
if missing('tdp_tower_acceleration_Mean'n) then 'STD_tdp_tower_acceleration_Mean'n = .;
else 'STD_tdp_tower_acceleration_Mean'n = ('tdp_tower_acceleration_Mean'n-42.026367263)/97.30037274;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_tower_acceleration_StdDe'n = 'Transformed Tower Acceleration';
Length 'STD_tdp_tower_acceleration_StdDe'n 8;
if missing('tdp_tower_acceleration_StdDev'n) then 'STD_tdp_tower_acceleration_StdDe'n = .;
else 'STD_tdp_tower_acceleration_StdDe'n = ('tdp_tower_acceleration_StdDev'n-119.98006474)/236.7249961;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_turbine_power_Max'n = 'Transformed Turbine Power';
Length 'STD_tdp_turbine_power_Max'n 8;
if missing('tdp_turbine_power_Max'n) then 'STD_tdp_turbine_power_Max'n = .;
else 'STD_tdp_turbine_power_Max'n = ('tdp_turbine_power_Max'n-1388.489253)/424.77628147;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_turbine_power_Mean'n = 'Transformed Turbine Power';
Length 'STD_tdp_turbine_power_Mean'n 8;
if missing('tdp_turbine_power_Mean'n) then 'STD_tdp_turbine_power_Mean'n = .;
else 'STD_tdp_turbine_power_Mean'n = ('tdp_turbine_power_Mean'n-425.92698732)/210.58951956;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_turbine_power_StdDev'n = 'Transformed Turbine Power';
Length 'STD_tdp_turbine_power_StdDev'n 8;
if missing('tdp_turbine_power_StdDev'n) then 'STD_tdp_turbine_power_StdDev'n = .;
else 'STD_tdp_turbine_power_StdDev'n = ('tdp_turbine_power_StdDev'n-405.27448716)/156.9633309;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_Max'n = 'Transformed tdp_voltage_Max';
Length 'STD_tdp_voltage_Max'n 8;
if missing('tdp_voltage_Max'n) then 'STD_tdp_voltage_Max'n = .;
else 'STD_tdp_voltage_Max'n = ('tdp_voltage_Max'n-326.21324462)/53.954593532;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_Mean'n = 'Transformed tdp_voltage_Mean';
Length 'STD_tdp_voltage_Mean'n 8;
if missing('tdp_voltage_Mean'n) then 'STD_tdp_voltage_Mean'n = .;
else 'STD_tdp_voltage_Mean'n = ('tdp_voltage_Mean'n-318.49989338)/52.795824865;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_StdDev'n = 'Transformed tdp_voltage_StdDev';
Length 'STD_tdp_voltage_StdDev'n 8;
if missing('tdp_voltage_StdDev'n) then 'STD_tdp_voltage_StdDev'n = .;
else 'STD_tdp_voltage_StdDev'n = ('tdp_voltage_StdDev'n-5.3141408297)/13.859913505;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_Var_Max'n = 'Transformed tdp_voltage_Var_Max';
Length 'STD_tdp_voltage_Var_Max'n 8;
if missing('tdp_voltage_Var_Max'n) then 'STD_tdp_voltage_Var_Max'n = .;
else 'STD_tdp_voltage_Var_Max'n = ('tdp_voltage_Var_Max'n-233.48813914)/2801.6281793;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_Var_Mean'n = 'Transformed tdp_voltage_Var_Mean';
Length 'STD_tdp_voltage_Var_Mean'n 8;
if missing('tdp_voltage_Var_Mean'n) then 'STD_tdp_voltage_Var_Mean'n = .;
else 'STD_tdp_voltage_Var_Mean'n = ('tdp_voltage_Var_Mean'n-72.815506376)/883.542482;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_voltage_Var_StdDev'n = 'Transformed tdp_voltage_Var_StdDev';
Length 'STD_tdp_voltage_Var_StdDev'n 8;
if missing('tdp_voltage_Var_StdDev'n) then 'STD_tdp_voltage_Var_StdDev'n = .;
else 'STD_tdp_voltage_Var_StdDev'n = ('tdp_voltage_Var_StdDev'n-106.66094995)/1302.1415727;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_wind_speed_Max'n = 'Transformed Turbine Wind Speed';
Length 'STD_tdp_wind_speed_Max'n 8;
if missing('tdp_wind_speed_Max'n) then 'STD_tdp_wind_speed_Max'n = .;
else 'STD_tdp_wind_speed_Max'n = ('tdp_wind_speed_Max'n-16.3760597)/4.0903898562;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_wind_speed_Mean'n = 'Transformed Turbine Wind Speed';
Length 'STD_tdp_wind_speed_Mean'n 8;
if missing('tdp_wind_speed_Mean'n) then 'STD_tdp_wind_speed_Mean'n = .;
else 'STD_tdp_wind_speed_Mean'n = ('tdp_wind_speed_Mean'n-7.0701402717)/1.5892267637;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_wind_speed_StdDev'n = 'Transformed Turbine Wind Speed';
Length 'STD_tdp_wind_speed_StdDev'n 8;
if missing('tdp_wind_speed_StdDev'n) then 'STD_tdp_wind_speed_StdDev'n = .;
else 'STD_tdp_wind_speed_StdDev'n = ('tdp_wind_speed_StdDev'n-2.9551158485)/0.9353295181;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_yaw_nacelle_position_Max'n = 'Transformed Yaw/Nacelle Position';
Length 'STD_tdp_yaw_nacelle_position_Max'n 8;
if missing('tdp_yaw_nacelle_position_Max'n) then 'STD_tdp_yaw_nacelle_position_Max'n = .;
else 'STD_tdp_yaw_nacelle_position_Max'n = ('tdp_yaw_nacelle_position_Max'n-340.16202525)/56.754595791;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_yaw_nacelle_position_Mea'n = 'Transformed Yaw/Nacelle Position';
Length 'STD_tdp_yaw_nacelle_position_Mea'n 8;
if missing('tdp_yaw_nacelle_position_Mean'n) then 'STD_tdp_yaw_nacelle_position_Mea'n = .;
else 'STD_tdp_yaw_nacelle_position_Mea'n = ('tdp_yaw_nacelle_position_Mean'n-177.48737999)/57.76872071;

* Transformation Method = STANDARDIZE ;
Label 'STD_tdp_yaw_nacelle_positio_StdD'n = 'Transformed Yaw/Nacelle Position';
Length 'STD_tdp_yaw_nacelle_positio_StdD'n 8;
if missing('tdp_yaw_nacelle_positio_StdDev'n) then 'STD_tdp_yaw_nacelle_positio_StdD'n = .;
else 'STD_tdp_yaw_nacelle_positio_StdD'n = ('tdp_yaw_nacelle_positio_StdDev'n-82.564103931)/32.410829763;

*------------------------------------------------------------*;
*Nodeid: _DJ212AIVDANIN7FX4HWWF6MGM;
*------------------------------------------------------------*;
   /*---------------------------------------------------------
     Generated SAS Scoring Code
     Date: 01Jul2021:12:33:57
     -------------------------------------------------------*/

   drop _badval_ _linp_ _temp_ _i_ _j_;
   _badval_ = 0;
   _linp_   = 0;
   _temp_   = 0;
   _i_      = 0;
   _j_      = 0;
   drop MACLOGBIG;
   MACLOGBIG= 7.0978271289338392e+02;

   array _xrow_25978166_0_{16} _temporary_;
   array _beta_25978166_0_{16} _temporary_ (   -1587.32724812137
           29.1848972549883
           75.4337055460721
           3121.37969177114
           516.160617425033
          -1943.27586776265
          -2230.33358963836
          -524.612087266448
          -1088.33840183303
           2202.42995742705
           34.6196502654868
           95.8583833370086
          -2161.07529684406
           3796.28199196387
          -19455.3930788217
           25.3458058557737);

   if missing(STD_tdp_wind_speed_Max)
      or missing(STD_tdp_voltage_Var_StdDev)
      or missing(STD_tdp_blade_angle_1_set_Mean)
      or missing(STD_pIssue)
      or missing(STD_tdp_blade_angle_2_set_StdDev)
      or missing(STD_tdp_voltage_Var_Mean)
      or missing(STD_tdp_voltage_Var_Max)
      or missing(STD_tdp_blade_angle_2_set_Mean)
      or missing(STD_tdp_blade_angle_2_set_Max)
      or missing(STD_pGB1)
      or missing(STD_tdp_blade_angle_3_set_StdDev)
      or missing(STD_tdp_hydraulic_pressure_Mean)
      or missing(STD_tdp_blade_angle_3_set_Max)
      or missing(STD_tdp_blade_angle_3_set_Mean)
      or missing(STD_tdp_temp_gen_air_cooler_Mean)
      then do;
         _badval_ = 1;
         goto skip_25978166_0;
   end;

   do _i_=1 to 16; _xrow_25978166_0_{_i_} = 0; end;

   _xrow_25978166_0_[1] = 1;

   _xrow_25978166_0_[2] = STD_pGB1;

   _xrow_25978166_0_[3] = STD_pIssue;

   _xrow_25978166_0_[4] = STD_tdp_blade_angle_1_set_Mean;

   _xrow_25978166_0_[5] = STD_tdp_blade_angle_2_set_Max;

   _xrow_25978166_0_[6] = STD_tdp_blade_angle_2_set_Mean;

   _xrow_25978166_0_[7] = STD_tdp_blade_angle_2_set_StdDev;

   _xrow_25978166_0_[8] = STD_tdp_blade_angle_3_set_Max;

   _xrow_25978166_0_[9] = STD_tdp_blade_angle_3_set_Mean;

   _xrow_25978166_0_[10] = STD_tdp_blade_angle_3_set_StdDev;

   _xrow_25978166_0_[11] = STD_tdp_hydraulic_pressure_Mean;

   _xrow_25978166_0_[12] = STD_tdp_temp_gen_air_cooler_Mean;

   _xrow_25978166_0_[13] = STD_tdp_voltage_Var_Max;

   _xrow_25978166_0_[14] = STD_tdp_voltage_Var_Mean;

   _xrow_25978166_0_[15] = STD_tdp_voltage_Var_StdDev;

   _xrow_25978166_0_[16] = STD_tdp_wind_speed_Max;

   do _i_=1 to 16;
      _linp_ + _xrow_25978166_0_{_i_} * _beta_25978166_0_{_i_};
   end;

   skip_25978166_0:
   length I_targetGB0 $1;
   label I_targetGB0 = 'Into: targetGB0';
   array _levels_25978166_{2} $ 1 _TEMPORARY_ ('1'
   ,'0'
   );
   label P_targetGB01 = 'Predicted: targetGB0=1';
   if (_badval_ eq 0) and not missing(_linp_) then do;
      if (_linp_ > 0) then do;
         P_targetGB01 = 1 / (1+exp(-_linp_));
      end; else do;
         P_targetGB01 = exp(_linp_) / (1+exp(_linp_));
      end;
      P_targetGB00 = 1 - P_targetGB01;
      if P_targetGB01 >= 0.5                  then do;
         I_targetGB0 = _levels_25978166_{1};
      end; else do;
         I_targetGB0 = _levels_25978166_{2};
      end;
   end; else do;
      _linp_ = .;
      P_targetGB01 = .;
      P_targetGB00 = .;
      I_targetGB0 = ' ';
   end;


   *------------------------------------------------------------*;
   * Initializing missing posterior and classification variables ;
   *------------------------------------------------------------*;
   if "P_targetGB00"n = . then "P_targetGB00"n =0.9281045752;
   if "P_targetGB01"n = . then "P_targetGB01"n =0.0718954248;
   if missing('I_targetGB0'n) then do;
      drop _P_;
      _P_= 0.0 ;
      if 'P_targetGB01'n > _P_ then do;
      _P_ = 'P_targetGB01'n;
      'I_targetGB0'n = '1';
      end;
      if 'P_targetGB00'n > _P_ then do;
      _P_ = 'P_targetGB00'n;
      'I_targetGB0'n = '0';
      end;
   end;
*------------------------------------------------------------*;
* Generating fixed output names;
*------------------------------------------------------------*;
Length EM_EVENTPROBABILITY 8;
LABEL EM_EVENTPROBABILITY = "Probability for targetGB0 =1";
EM_EVENTPROBABILITY ='P_targetGB01'n;
LENGTH EM_CLASSIFICATION $8;
LABEL EM_CLASSIFICATION= "Predicted for targetGB0";
EM_CLASSIFICATION ='I_targetGB0'n;
Length EM_PROBABILITY 8;
LABEL EM_PROBABILITY = "Probability of Classification";
EM_PROBABILITY = max(
'P_targetGB01'n,
'P_targetGB00'n);

   drop 
'InValidVal_count_Max'n 'InValidVal_count_Mean'n 'InValidVal_count_StdDev'n
'MntAssetFreq'n 'MntInspectFreq'n 'MntRepairFreq'n 'pGB1'n 'pGB2'n 'pIssue'n
'SumCheck4320'n 'SumInspect4320'n 'SumOilLevel4320'n 'SumOilPress4320'n
'SumOilTemp4320'n 'SumRepair4320'n 'SumTemp4320'n 'SumTot4320'n 'targetGB1'n
'targetGB2'n 'targetX'n 'tdp_air_temp_Max'n 'tdp_air_temp_Mean'n
'tdp_air_temp_StdDev'n 'tdp_blade_angle_1_set_Max'n
'tdp_blade_angle_1_set_Mean'n 'tdp_blade_angle_1_set_StdDev'n
'tdp_blade_angle_2_set_Max'n 'tdp_blade_angle_2_set_Mean'n
'tdp_blade_angle_2_set_StdDev'n 'tdp_blade_angle_3_set_Max'n
'tdp_blade_angle_3_set_Mean'n 'tdp_blade_angle_3_set_StdDev'n
'tdp_blade_angle_Max'n 'tdp_blade_angle_Mean'n 'tdp_blade_angle_StdDev'n
'tdp_blade_angle_Var_Max'n 'tdp_blade_angle_Var_Mean'n
'tdp_blade_angle_Var_StdDev'n 'tdp_gen_speed_Max'n 'tdp_gen_speed_Mean'n
'tdp_gen_speed_StdDev'n 'tdp_hydraulic_pressure_Max'n
'tdp_hydraulic_pressure_Mean'n 'tdp_hydraulic_pressure_StdDev'n
'tdp_power_factor_Max'n 'tdp_power_factor_Mean'n 'tdp_power_factor_StdDev'n
'tdp_ResidPower_Max'n 'tdp_ResidPower_Mean'n 'tdp_ResidPower_StdDev'n
'tdp_state_fault_Max'n 'tdp_state_fault_Mean'n 'tdp_state_fault_StdDev'n
'tdp_temp_gearbox_bearing_Max'n 'tdp_temp_gearbox_bearing_Mean'n
'tdp_temp_gearbox_bearin_StdDev'n 'tdp_temp_gearbox_oil_Max'n
'tdp_temp_gearbox_oil_Mean'n 'tdp_temp_gearbox_oil_StdDev'n
'tdp_temp_gen_air_cooler_Max'n 'tdp_temp_gen_air_cooler_Mean'n
'tdp_temp_gen_air_cooler_StdDev'n 'tdp_temp_gen_bearing_de_Max'n
'tdp_temp_gen_bearing_de_Mean'n 'tdp_temp_gen_bearing_de_StdDev'n
'tdp_temp_gen_bearing_nde_Max'n 'tdp_temp_gen_bearing_nde_Mean'n
'tdp_temp_gen_bearing_nd_StdDev'n 'tdp_temp_main_bearing_Max'n
'tdp_temp_main_bearing_Mean'n 'tdp_temp_main_bearing_StdDev'n
'tdp_tower_acceleration_Max'n 'tdp_tower_acceleration_Mean'n
'tdp_tower_acceleration_StdDev'n 'tdp_turbine_power_Max'n
'tdp_turbine_power_Mean'n 'tdp_turbine_power_StdDev'n 'tdp_voltage_Max'n
'tdp_voltage_Mean'n 'tdp_voltage_StdDev'n 'tdp_voltage_Var_Max'n
'tdp_voltage_Var_Mean'n 'tdp_voltage_Var_StdDev'n 'tdp_wind_speed_Max'n
'tdp_wind_speed_Mean'n 'tdp_wind_speed_StdDev'n 'tdp_yaw_nacelle_position_Max'n
      'tdp_yaw_nacelle_position_Mean'n 'tdp_yaw_nacelle_positio_StdDev'n
   ;



run;


proc freq data=temp; table targetGB0; run;

proc means data=temp; var em_EventProbability; run;

data temp2;
   set temp;
   if em_EventProbability ge 0.5 then class=1; else class=0;
   if em_EventProbability ge 0.05 then class2=1; else class2=0;
run;

proc freq; table class*targetGB0; run;
proc freq; table class2*targetGB0; run;

proc print noobs label;
   where em_EventProbability ge 0.1;
   var tdp_asset_name em_EventProbability;
   label em_EventProbability='P(fail)';
   title 'Assets that might need attention';
run;